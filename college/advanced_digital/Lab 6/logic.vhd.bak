-- logic

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_signed.all;
ENTITY logic IS
	PORT (Operation		  : IN STD_LOGIC_VECTOR(2 DOWNTO 0);
		  Alogic,Blogic	  : IN STD_LOGIC_VECTOR(2 DOWNTO 0);
		  trueFalse		  : OUT STD_LOGIC_VECTOR(3 DOWNTO 0));
END logic;

ARCHITECTURE Structure OF logic IS
	BEGIN 
		PROCESS(Operation,Alogic,Blogic)
		BEGIN 
		CASE Operation IS
			WHEN "100" =>		--COMPARE IF EQUAL
				IF(Alogic = Blogic) THEN
					trueFalse <= "0001";
				ELSE
					trueFalse <= "0000";
				END IF;
			WHEN "101" =>		--COMPARE A>B
				IF(Alogic > Blogic) THEN
					trueFalse <= "0001";
				ELSE
					trueFalse <= "0000";
				END IF;
			WHEN "110" =>		--COMPARE A<B
				IF(Alogic < Blogic) THEN
					trueFalse <= "0001";
				ELSE
					trueFalse <= "0000";
				END IF;
			WHEN "111" =>		--COMPARE A=0
				IF(Alogic = "000") THEN
					trueFalse <= "0001";
				ELSE
					trueFalse <= "0000";
				END IF;
			WHEN OTHERS =>
				trueFalse <= "0000";
		END CASE;
		
		END PROCESS;	
		
END Structure;

-- add/sub

--LIBRARY ieee;
--USE ieee.std_logic_1164.all;
--USE ieee.std_logic_signed.all;
--ENTITY addsub IS
--	PORT (AS : IN STD_LOGIC;
--		  x	 : IN STD_LOGIC_VECTOR (2 downto 0);
--		  y	 : IN STD_LOGIC_VECTOR (2 downto 0);
--		  s	 : OUT STD_LOGIC_VECTOR (2 downto 0);
--		  cout, overflow		  : OUT STD_LOGIC);
--END addsub;
--ARCHITECTURE Structure OF addsub IS
--	Signal yAS : STD_LOGIC_VECTOR (2 downto 0);
--	COMPONENT adder
--		PORT (	cin		  	: IN STD_LOGIC;
--				x : IN STD_LOGIC_VECTOR (2 downto 0);
--				y : IN STD_LOGIC_VECTOR (2 downto 0);
--				s : OUT STD_LOGIC_VECTOR (2 downto 0);
--				cout, overflow		  : OUT STD_LOGIC);
--	END COMPONENT;
--BEGIN 
--		stage0:	adder PORT MAP(AS,x,yAS,s,cout,overflow);
--			yAS(0) <= y(0) xor AS; --since its 2 downto 0, LSB is 0
--			yAS(1) <= y(1) xor AS;
--			yAS(2) <= y(2) xor AS; --number representation is in signed decimal
--								   --having # rep. in ASCII does not give correct results
--								   --when incorrect output reached there is overflow		
--END Structure;